<UserControl x:Class="PianoTutorial.View.SongListView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PianoTutorial.View"
             xmlns:mcw ="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:viewModel="clr-namespace:PianoTutorial.ViewModel"
        mc:Ignorable="d">

    <UserControl.DataContext>
        <viewModel:SongListViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <SolidColorBrush x:Key="BottomPanelColorBrush" Color="#FF303335"/>
        <SolidColorBrush x:Key="RadioButtonColorBrush" Color="WhiteSmoke"/>

        <ControlTemplate TargetType="RadioButton" x:Key="RadioButton"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

            <BulletDecorator Background="#00FFFFFF">
                <BulletDecorator.Bullet>
                    <mcw:BulletChrome Height="50" Width="50" Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" IsChecked="{TemplateBinding ToggleButton.IsChecked}" IsRound="True"  />
                </BulletDecorator.Bullet>
                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
            </BulletDecorator>

            <ControlTemplate.Triggers>

                <Trigger Property="ContentControl.HasContent">

                    <Setter Property="FrameworkElement.FocusVisualStyle">

                        <Setter.Value>

                            <Style TargetType="IFrameworkInputElement">

                                <Style.Resources>
                                    <ResourceDictionary />
                                </Style.Resources>

                                <Setter Property="Control.Template">

                                    <Setter.Value>

                                        <ControlTemplate>
                                            <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="14,0,0,0" SnapsToDevicePixels="True" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="Control.Padding">

                        <Setter.Value>
                            <Thickness>4,0,0,0</Thickness>
                        </Setter.Value>
                    </Setter>

                    <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                    </Trigger.Value>
                </Trigger>

                <Trigger Property="UIElement.IsEnabled">

                    <Setter Property="TextElement.Foreground">

                        <Setter.Value>
                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                        </Setter.Value>
                    </Setter>

                    <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                    </Trigger.Value>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </UserControl.Resources>


    <Grid Background="#252525" Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
        <ListBox Background="#252525" ItemsSource="{Binding RadioCollection}" SelectedItem="{Binding SelectedRadio}">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <RadioButton 
                                    
                                    BorderThickness="10,10,10,10"
                                    Foreground="WhiteSmoke"
                                    FontSize="25"
                                    Content="{Binding Header}" 
                                    IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="15"/>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

    </Grid>
</UserControl>
